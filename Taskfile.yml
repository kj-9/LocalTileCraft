# https://taskfile.dev

version: '3'

tasks:
  #install-tilemaker:
  # need to build from source. see https://github.com/systemed/tilemaker#installing

  dl-water:
    cmds:
      - wget https://osmdata.openstreetmap.de/download/water-polygons-split-4326.zip
      - unzip water-polygons-split-4326.zip
      - mv water-polygons-split-4326/water_polygons.* tilemaker/coastline
      - rm -rf water-polygons-split-4326.zip water-polygons-split-4326/
    status:
      - test -f tilemaker/coastline/water_polygons.shp
 
  dl-pbf:
    cmds: 
      - wget -P data https://download.geofabrik.de/asia/japan/kyushu-latest.osm.pbf
    status:
      - test -f data/kyushu-latest.osm.pbf

  make-mbtiles:
    dir: tilemaker/
    deps: [dl-water, dl-pbf] # install-tilemaker
    cmds:
      - tilemaker --input ../data/kyushu-latest.osm.pbf --output ../data/kyushu-latest.mbtiles --config config/config-openmaptiles.json --process config/process-openmaptiles-kumejima.lua
    sources:
      - tilemaker/config/config-openmaptiles.json
      - tilemaker/config/process-openmaptiles-kumejima.lua
    generates:
      - data/kyushu-latest.mbtiles
    method: timestamp


  install-tileserver:
    cmds:
      - pnpm install -g tileserver-gl-light
    status: 
      - tileserver-gl-light --version

  preview-mbtiles:
    deps: [make-mbtiles, install-tileserver]
    cmds:
      # `--no-cors` option does not work: see also: [link to issue]
      - tileserver-gl-light data/kyushu-latest.mbtiles --port 8081

  install-pmtiles:
    cmds:
      - curl -sL -o - https://github.com/protomaps/go-pmtiles/releases/download/v1.8.0/go-pmtiles-1.8.0_Darwin_arm64.zip | bsdtar xf -
      - chmod +x pmtiles
    status:
      - ./pmtiles

  make-pmtiles:
    deps: [install-pmtiles, make-mbtiles]
    cmds:
      - ./pmtiles convert data/kyushu-latest.mbtiles data/kyushu-latest.pmtiles
    sources:
      - data/kyushu-latest.mbtiles
    generates:
      - data/kyushu-latest.pmtiles
    method: timestamp

  serve-pmtiles:
    deps: [make-pmtiles]
    cmds: 
      - ./pmtiles serve ./data --cors "*" --port 8080

  run-maputnik:
    cmds:
      - docker run -it --rm -p 8888:8888 maputnik/editor
      
  run-editor:
    deps: [serve-pmtiles, run-maputnik]
    cmds:
      - open -u http://localhost:8888

  install-front:
    dir: front/
    cmds:
      - pnpm install
    status:
      - test -d node_modules

  serve-front:
    deps: [install-front]
    dir: front/
    cmds:
      - pnpm dev

  build-front:
    deps: [install-front]
    dir: front/
    cmds:
      - cp ../data/kyushu-latest.pmtiles public/kyushu-latest.pmtiles
      - pnpm build

  preview-front:
    dir: front/
    deps: [build-front]
    cmds:
      - pnpm preview
